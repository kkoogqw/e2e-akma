// Objective-C API for talking to ppakma/osign Go package.
//   gobind -lang=objc ppakma/osign
//
// File is generated by gobind. Do not edit.

#ifndef __Osign_H__
#define __Osign_H__

@import Foundation;
#include "ref.h"
#include "Universe.objc.h"


@class OsignApiBigint;
@class OsignApiDLogProof;
@class OsignApiEcPoint;
@class OsignClientKey;
@class OsignClientPreSign;
@class OsignClientState;
@class OsignDlogProof;
@class OsignKeyPair;
@class OsignServerKeyGenResult;
@class OsignServerPreSign;
@class OsignServerPublicKey;
@class OsignServerSecret;
@class OsignServerState;

@interface OsignApiBigint : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull value;
@end

@interface OsignApiDLogProof : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field ApiDLogProof.R with unsupported type: ppakma/osign.ApiEcPoint

// skipped field ApiDLogProof.S with unsupported type: ppakma/osign.ApiBigint

// skipped field ApiDLogProof.C with unsupported type: ppakma/osign.ApiBigint

@end

@interface OsignApiEcPoint : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field ApiEcPoint.X with unsupported type: ppakma/osign.ApiBigint

// skipped field ApiEcPoint.Y with unsupported type: ppakma/osign.ApiBigint

@end

@interface OsignClientKey : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field ClientKey.X with unsupported type: *math/big.Int

// skipped field ClientKey.Q with unsupported type: *github.com/tronch0/curv3/ecdsa/point.Point

@end

/**
 * message 2
 */
@interface OsignClientPreSign : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field ClientPreSign.M with unsupported type: *math/big.Int

// skipped field ClientPreSign.R with unsupported type: *github.com/tronch0/curv3/ecdsa/point.Point

@property (nonatomic) OsignDlogProof* _Nullable pi;
@end

@interface OsignClientState : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field ClientState.K1 with unsupported type: *math/big.Int

// skipped field ClientState.R1 with unsupported type: *github.com/tronch0/curv3/ecdsa/point.Point

// skipped field ClientState.R2 with unsupported type: *github.com/tronch0/curv3/ecdsa/point.Point

@property (nonatomic) OsignDlogProof* _Nullable pi;
// skipped field ClientState.Paikey with unsupported type: *github.com/tronch0/crypt0/paillier.PrivateKey

@property (nonatomic) NSData* _Nullable ct;
@end

@interface OsignDlogProof : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
// skipped constructor DlogProof.NewDlogProof with unsupported parameter or return types

// skipped field DlogProof.R with unsupported type: *github.com/tronch0/curv3/ecdsa/point.Point

// skipped field DlogProof.S with unsupported type: *math/big.Int

// skipped field DlogProof.C with unsupported type: *math/big.Int

// skipped method DlogProof.Verify with unsupported parameter or return types

@end

@interface OsignKeyPair : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field KeyPair.Pk with unsupported type: ppakma/osign.ApiEcPoint

// skipped field KeyPair.Sk with unsupported type: ppakma/osign.ApiBigint

@end

@interface OsignServerKeyGenResult : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) OsignServerSecret* _Nullable privKey;
@property (nonatomic) OsignServerPublicKey* _Nullable pubKey;
@end

/**
 * message 2
 */
@interface OsignServerPreSign : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSData* _Nullable ct;
@end

@interface OsignServerPublicKey : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field ServerPublicKey.Q with unsupported type: *github.com/tronch0/curv3/ecdsa/point.Point

@property (nonatomic) OsignDlogProof* _Nullable pi;
@end

@interface OsignServerSecret : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field ServerSecret.X with unsupported type: *math/big.Int

// skipped field ServerSecret.Q with unsupported type: *github.com/tronch0/curv3/ecdsa/point.Point

@end

@interface OsignServerState : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field ServerState.K2 with unsupported type: *math/big.Int

// skipped field ServerState.R2 with unsupported type: *github.com/tronch0/curv3/ecdsa/point.Point

// skipped field ServerState.Ct with unsupported type: *math/big.Int

@end

// skipped function ClientFinal with unsupported parameter or return types


// skipped function ClientSign1 with unsupported parameter or return types


// skipped function ClientSign2 with unsupported parameter or return types


/**
 * client key Generation
 */
FOUNDATION_EXPORT OsignClientKey* _Nullable OsignGenerateClientKeys(OsignServerPublicKey* _Nullable serverPubKey, OsignDlogProof* _Nullable pi, NSError* _Nullable* _Nullable error);

/**
 * server key Generation
 */
FOUNDATION_EXPORT OsignServerKeyGenResult* _Nullable OsignGenerateServerKeys(void);

// skipped function NewDlogProof with unsupported parameter or return types


// skipped function ServerSign1 with unsupported parameter or return types


FOUNDATION_EXPORT OsignServerPreSign* _Nullable OsignServerSign2(OsignServerSecret* _Nullable key, OsignServerState* _Nullable st, OsignClientPreSign* _Nullable preSig, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSString* _Nonnull OsignTestDLogProof(NSString* _Nullable keypair);

FOUNDATION_EXPORT long OsignTestDLogProofVerify(NSString* _Nullable pi, NSString* _Nullable pk);

FOUNDATION_EXPORT NSString* _Nonnull OsignTestGenKeyPair(void);

#endif
